#!/usr/bin/env bash
sudo yum -y update

#install vim
sudo yum install -y vim

#install locate
sudo yum -y install mlocate
sudo updatedb

#added dependencies for nginx and php
sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
sudo rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm


sudo yum -y update

sudo yum install -y nginx18
sudo systemctl enable nginx.service
sudo systemctl start nginx.service

systemctl stop httpd.service
yum remove httpd
systemctl disable httpd.service

sudo cat > /etc/yum.repos.d/MariaDB.repo <<- EOF
[mariadb]
	name = MariaDB
	baseurl = http://yum.mariadb.org/10.1/centos7-amd64
	gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
	gpgcheck=1
EOF

sudo yum install -y MariaDB-server MariaDB-client
sudo systemctl enable mariadb.service
sudo systemctl start mariadb.service

### post-install setup

# set root password
sudo /usr/bin/mysqladmin -u root password '1234'

# allow remote access (required to access from our private network host. Note that this is completely insecure if used in any other way)
mysql -u root -p1234 -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '1234' WITH GRANT OPTION; FLUSH PRIVILEGES;"

# drop the anonymous users
mysql -u root -p1234 -e "DROP USER ''@'localhost';"
mysql -u root -p1234 -e "DROP USER ''@'$(hostname)';"

# drop the demo database
mysql -u root -p1234 -e "DROP DATABASE test;"

# restart
sudo /etc/init.d/mysql restart

# enable remote access
# setting the mysql bind-address to allow connections from everywhere
sudo grep -q '^bind-address' /etc/my.cnf && sudo sed -i 's/bind-address.*/bind-address = 0.0.0.0/' /etc/my.cnf || sudo bash -c 'echo -e "bind-address = 0.0.0.0" >> /etc/my.cnf'

#installing php

#downloaded package for php56u
sudo wget https://centos7.iuscommunity.org/ius-release.rpm && sudo rpm -Uvh ius-release.rpm

sudo yum update -y

sudo yum install -y php56u php56u-devel php56u-fpm php56u-gd php56u-mbstring php56u-mcrypt php56u-mysqlnd php56u-pdo php56u-opcache php56u-pear php56u-xml php56u-xmlrpc php56u-memcached php56u-curl php56u-imagick

#denied script execution allowances by request
sudo grep -q '^;cgi.fix_pathinfo=1' /etc/php.ini && sudo sed -i 's/;cgi.fix_pathinfo=1.*/cgi.fix_pathinfo=0/' /etc/php.ini || sudo bash -c 'echo -e "cgi.fix_pathinfo=0" >> /etc/php.ini'

#comment the port listener for php-fpm
sudo grep -q '^listen = 127.0.0.1:9000' /etc/php-fpm.d/www.conf && sudo sed -i 's/listen = 127.0.0.1:9000.*/;listen = 127.0.0.1:9000/' /etc/php-fpm.d/www.conf || sudo bash -c 'echo -e ";listen = 127.0.0.1:9000" >> /etc/php-fpm.d/www.conf'

#uncomment the line that allows us to use the socket for using php-fpm
sudo grep -q '^;listen = /run/php-fpm/www.sock' /etc/php-fpm.d/www.conf && sudo sed -i 's/;listen = \/run\/php-fpm\/www.sock.*/listen = \/var\/run\/php-fpm\/php-fpm.sock/' /etc/php-fpm.d/www.conf || sudo bash -c 'echo -e "listen = /var/run/php-fpm/php-fpm.sock" >> /etc/php-fpm.d/www.conf'

#give allowances to the webservice nginx
sudo grep -q '^;listen.acl_users = nginx' /etc/php-fpm.d/www.conf && sudo sed -i 's/;listen.acl_users = nginx.*/listen.acl_users = nginx/' /etc/php-fpm.d/www.conf || sudo bash -c 'echo -e "listen.acl_users = nginx" >> /etc/php-fpm.d/www.conf'

#remove the owner and group from the listener
sudo grep -q '^;listen.owner = root' /etc/php-fpm.d/www.conf && sudo sed -i 's/;listen.owner = root.*/listen.owner = nobody/' /etc/php-fpm.d/www.conf || sudo bash -c 'echo -e "listen.owner = nobody" >> /etc/php-fpm.d/www.conf'

sudo grep -q '^;listen.group = root' /etc/php-fpm.d/www.conf && sudo sed -i 's/;listen.group = root.*/listen.group = nobody/' /etc/php-fpm.d/www.conf || sudo bash -c 'echo -e "listen.group = nobody" >> /etc/php-fpm.d/www.conf'

#remove from the user and group the php-fpm for allowing nginx to be able to use php-fpm service
sudo grep -q '^user = php-fpm' /etc/php-fpm.d/www.conf && sudo sed -i 's/user = php-fpm.*/user = nginx/' /etc/php-fpm.d/www.conf || sudo bash -c 'echo -e "user = nginx" >> /etc/php-fpm.d/www.conf'

sudo grep -q '^group = php-fpm' /etc/php-fpm.d/www.conf && sudo sed -i 's/group = php-fpm.*/group = nginx/' /etc/php-fpm.d/www.conf || sudo bash -c 'echo -e "group = nginx" >> /etc/php-fpm.d/www.conf'

#create a virtual server in nginx
sudo cat > /etc/nginx/conf.d/default.conf <<- EOF
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /usr/share/nginx/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm;


		server_name localhost;

		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files \$uri \$uri/ /index.php\$is_args\$args;
		}
	
		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		location ~ \.php$ {
    	 	   try_files \$uri =404;
    	       fastcgi_split_path_info ^(.+\.php)(/.+)\$;
		   	   fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
    	       #fastcgi_pass   127.0.0.1:9000;
    	       fastcgi_index index.php;
		   	   fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
		       include fastcgi_params;
		}
	
		# cache.appcache, your document html and data
		#location ~* \.(?:manifest|appcache|html?|xml|json)$ {
		#  expires -1;
		#  # access_log logs/static.log; # I don't usually include a static log
		#}
	
		# Feed
		location ~* \.(?:rss|atom)$ {
		  expires 1h;
		  add_header Cache-Control "public";
		}
	
		# Media: images, icons, video, audio, HTC, fonts
		location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff)$ {
		  expires 1M;
		  access_log off;
		  add_header Cache-Control "public";
		}
	
		# CSS and Javascript
		location ~* \.(?:css|js)$ {
		  expires 1y;
		  access_log off;
		  add_header Cache-Control "public";
		}
	
		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		#location ~ /\.ht {
		#	deny all;
		#}
}
EOF

#rename the index file just for testing in the configuration is right
sudo mv /usr/share/nginx/html/index.html /usr/share/nginx/html/index.php

#enable the php-fpm server
sudo systemctl enable php-fpm

#start the php-fpm server
sudo systemctl start php-fpm

#restart the nginx server
sudo systemctl restart nginx

#enter to localhost:9090 for watching if the web service is running
